// Remplacement de chaine
// @function str-replace($string, $search, $replace: "") {
//   $index: str_index($string, $search);
//   @if $index {
//     @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
//   }
//   @return $string;
// }

// Gestion des fonts
@mixin font-face($name, $path, $weight: null, $style: null, $exts: woff2 woff ttf svg) {
  $src: null;

  $extmods: (
          eot: "?",
    // svg: "#" + str-replace($name, " ", "_")
  );

  $formats: (
    otf: "opentype",
    ttf: "truetype",
  );

  @each $ext in $exts {
    $extmod: if(map_has_key($extmods, $ext), $ext + map_get($extmods, $ext), $ext);
    $format: if(map_has_key($formats, $ext), $ext + map_get($formats, $ext), $ext);
    $src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma)
  }

  @font-face {
    font-family: quote($name);
    font-style: $style;
    font-weight: $weight;
    src: $src;
  }

}

// Responsive
@function strip-unit($number){
  @if type_of($number) == 'number' and not unitless($number){
    @return $number / ($number * 0 + 1);
  }
  @return $number;
}

@mixin up($size) {
  $size: strip-unit($size);
  @media (min-width: $size + 1px) { @content; }
}

@mixin down($size) {
  $size: strip-unit($size);
  @media (max-width: $size + 1px) { @content; }
}